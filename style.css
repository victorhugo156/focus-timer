* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    --hue: 194;
    --bg-color: hsl(var(--hue), 5%, 7%);
    --text-color: hsl(var(--hue), 40%, 98%);
    --controls-bg-color: hsl(var(--hue), 0%, 14%);
    --butoton-secondary: hsl(var(--hue), 40%, 98%);

    --blue: #42D3FF;
    --white: #F8F8FC;
    --light-gray: #242424;
}

html.light {
    --bg-color: hsl(var(--hue), 40%, 98%);
    --text-color: hsl(var(--hue), 5%, 7%);
    --controls-bg-color: hsl(var(--hue), 0%, 14%);
}

html.light .ph-sun,
html:not(.light) .ph-moon{
    display: none;
}

body {
    background-color: var(--bg-color);
    color: var(--text-color);
}

.header {
    text-align: right;

    padding: 2rem;
}

/*Accessibility Screen Reader*/
.sr-only{
    width: 1px;
    height: 1px;
    
    position: absolute;
    overflow: hidden;

    margin: -1px;
    padding: 0px;
    border: 0px;
    appearance: none;

}
main {
    width: 100%;
    height: 100vh;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

}

/*This is a util class so I can applay the flex properties to any element with tag flax in the HTML*/
.flex {
    display: flex;
}

.container-content {

    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.timer {
    margin-bottom: 1.6rem;
}

.timer span {
    font-family: sans-serif;
    font-weight: bold;
    font-size: 9.6rem;

}

.controls-panel {
    background-color: var(--light-gray);

    justify-content: center;
    align-items: center;
    gap: 1.6rem;

    padding: 1.5rem;

    border-radius: 99px;
}

button {
    background-color: transparent;
    border: 0;

    font-size: 6.4rem;
    color: var(--blue);

    cursor: pointer;
}

.secondary {
    color: var(--butoton-secondary);
}

/* controls logic 

The idea of this logic is:
- When there is no class "running" = show icons "play" "timer" and "music"
- When there is class "running" = hide icons "play" and "timer --> Show icons "pause" and "stop"
- When there is class "music-on" = hide icon "ph-speaker-none --> Show icon "ph-speaker-high"

This logic happens because of the specificity of the elements.

The innitial state of the elements "ph-play-circle", "ph-play-timer" and "ph-speaker-none"
is display none, however, when we add the selector "html:not()", its specificity will be 
higher than the previous selectors, that`s why the logic works.

*/

.running .ph-play-circle,
.running .ph-timer,
.music-on .ph-speaker-none,
html:not(.running) .ph-pause-circle,
html:not(.running) .ph-stop-circle,
html:not(.music-on) .ph-speaker-high {
    display: none;
}